(function($){
	
	var backdrop = $("<div>").addClass("modal-backdrop absolute fade in"),
	img = $("<img>").attr({
		src:"resource/image/loading.gif"
	}),
	container = $("<div>").addClass("loading-container");
	
	backdrop.append(container.append($("<p>").append(img)).append($("<p>").html("加载中...")));
	
	var mask = function(target){
		$(target).append(backdrop);
	},
	unmask = function() {
		backdrop.remove();
	},
	initComponent = function(){
		$(".modal").on("shown.bs.modal",function(){
			$(this).find("form :input:not(:disabled):not(:hidden)").first().focus();
		});
		
		$(".collapse").collapse();
		$(".btn").button();
		$(".alert").alert();
		
		$("form").each(function(i,o){
			var temp = $(o);
			
			temp.find(":input:not(:disabled):not(:hidden)").first().focus();
			
			if ($.isNotEmpty(temp.attr("isvalid")) && temp.attr("isvalid").booleanValue()) {
				return true;
			}
			
			temp.validate({
				submitHandler : function(f) {
					var form = $(f),target = form.attr("data-target");
					
					form.ajaxSubmit({
						beforeSubmit:function(formData, jqForm, options){
							var method = form.attr("onbeforesubmit");
							
							if ($.isNotEmpty(method) && 
								$.isFunction(window[method]) &&
								window[method](formData, jqForm, options) === false){
								
								return false;
							}
							
							var dataSearch = jqForm.parents(".modal").attr("data-search");
							
							if($.isEmpty(dataSearch) || dataSearch.booleanValue()) {
								jqForm.parents(".modal").modal("hide");
							}
							
							mask(target);
						},
						success:function(response,state,options,from) {
							from.clearForm();
							var method = form.attr("data-onsuccess");
							
							if ($.isNotEmpty(method) && 
								$.isFunction(window[method]) &&
								window[method](response, state, options, from) === false) {
								
								return false;
							}
							if (from.parents(".modal").length > 0) {
								$(target).html.defer(50,$(target),[response]);
							} else {
								$(target).html(response);
							}
							
						}
					});
				}
			});
			
			temp.find("button[type='reset']").click(function(){
				temp.clearForm();
			});
			
			temp.attr("isvalid",true);
			
		});
	};
	
	var origAppend = $.fn.append;

    $.fn.append = function () {
        return origAppend.apply(this, arguments).trigger("append");
    };
    
    $.maskload = function(target,url,data,callback,type) {
		if ($.isFunction(data)) {
			type = type || callback;
			callback = data;
			data = undefined;
		}
		
		mask(target);
		
		$.post(url,data,function(response,state,options){
			$(target).html(response);
			if ($.isFunction(callback)) {
				callback(response,state,options);
			}
		},type);
		
		return this;
	};
	
	$.fn.maskload = function(url,data,callback) {
		mask($(this));
		this.load(url,data,callback);
		return this;
	};
	
	$(window).ajaxStop(unmask);
	
	$(document).bind("append", initComponent);
	
})(jQuery);
