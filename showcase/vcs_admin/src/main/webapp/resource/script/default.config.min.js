(function($){
	var backdrop = $("<div>").addClass("modal-backdrop absolute fade in"),
	img = $("<img>").attr({
		src:"resource/image/loading.gif"
	}),
	container = $("<div>").addClass("loading-container");
	
	backdrop.append(container.append($("<p>").append(img)).append($("<p>").html("加载中...")));
	
	var mask = function(target){
		$(target).append(backdrop);
	},
	unmask = function() {
		$(".modal-backdrop.absolute").remove();
	};

	$(window).ajaxStop(function(){
		
		unmask();

		$(".collapse").collapse();
		$(".btn").button();
		$(".alert").alert();
		
		$("form").each(function(i,o){
			
			if ($.isNotEmpty($(o).attr("isvalid")) && $(o).attr("isvalid").booleanValue()) {
				return true;
			}
			
			$(o).validate({
				submitHandler : function(f) {
					var form = $(f),target = form.attr("data-target");
					
					form.ajaxSubmit({
						beforeSubmit:function(formData, jqForm, options){
							var method = form.attr("onbeforesubmit");
							
							if ($.isNotEmpty(method) && 
								$.isFunction(window[method]) &&
								window[method](formData, jqForm, options) === false){
								
								return false;
							}
							
							mask(target);
						},
						success:function(response,state,options,from) {
							$(from).clearForm();
							var method = form.attr("onsuccess");
							
							if ($.isNotEmpty(method) && 
								$.isFunction(window[method]) &&
								window[method](response, state, options, from) === false) {
								
								return false;
							}
							
							$(target).html(response);
						}
					});
				}
			});
			
			$(o).find("button[type='reset']").click(function(){
				$(o).clearForm();
			});
			
			$(o).attr("isvalid",true);
			
		});

	});
	
	$.extend(jQuery,{
		maskload:function(target,url,data,callback,type) {
			if ($.isFunction(data)) {
				type = type || callback;
				callback = data;
				data = undefined;
			}
			
			mask(target);
			
			$.post(url,data,function(response,state,options){
				$(target).html(response);
				if ($.isFunction(callback)) {
					callback(response,state,options);
				}
			},type);
			
			return this;
		}
	});
	
	$.extend(jQuery.fn,{
		maskload:function(url,data,callback) {
			mask($(this));
			this.load(url,data,callback);
			return this;
		}
	});
	
})(jQuery);

